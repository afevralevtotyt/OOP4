Привет!

На связи домашнее задание урока.

В данном задании вам необходимо создать упрощенное приложение для автогонок. Все задания данного урока связаны между собой, поэтому рекомендуем делать задание поступательно, шаг за шагом, чтобы реализовать весь функционал.

На платформу вам необходимо прислать ссылку на pull-request вашего проекта в GitHub.

Задание 1
Напишем приложение для автогонок. За основу структуры классов и данных возьмите предыдущую реализацию с классом car и наследниками, дополнив его новыми вводными.

Все параметры и методы, которые не указаны в текущем задании, закомментируйте.

В наших автогонках могут участвовать следующие виды авто, для каждого из которых нужно создать отдельный класс:

легковые автомобили,
грузовые автомобили,
автобусы.
Все авто всех трех групп имеют параметры:

«Марка»,
«Модель»,
«Объем двигателя».
Также все авто имеют:

метод «начать движение»,
метод «закончить движение».
Подсказка 1
Так как остальные параметры и методы нам не важны, их можно удалить или закомментировать.

Для каждого вида авто (легковые, грузовые и автобусы) создайте по 4 объекта с произвольными параметрами.

Подсказка 2
Не забудьте настроить модификаторы доступа, добавить геттеры и сеттеры, а также проверку данных. Не забудьте переопределить методы.

Критерии проверки
Создан класс «Легковые автомобили».
Создан класс «Грузовые автомобили».
Создан класс «Автобусы».
Созданы по 4 объекта с произвольными параметрами для каждого класса.
Все лишние параметры и методы, которые не указаны в данном задании, закомментированы.

Задание 4
Создайте класс «Водитель», который будет иметь следующие параметры:

«ФИО» водителя,
«Наличие водительских прав»,
«Стаж».
Также все водители имеют:

метод «начать движение»,
метод «остановиться»,
метод «заправить авто».
Водители будут отличаться друг от друга по типу прав (соответственно, это три разных класса):

для легковых авто нужна категория В,
для грузовых нужна категория С,
для автобусов — D.
Водитель с определенным типом прав может управлять только одним авто в выбранной категории. Управлять авто других категорий в наших соревнованиях он не может.

Подсказка
Лучше всего для реализации подойдет параметрический полиморфизм.

Напишите приложение, которое выводит в консоль информацию в формате:

“водитель А управляет автомобилем Б и будет участвовать в заезде”.

На платформу в качестве выполненного задания пришлите ссылку на pull-request вашего проекта в GitHub.

Критерии оценки
Реализован класс «Водитель» с набором параметров и методов.
Реализован класс «Водитель категории B».
Реализован класс «Водитель категории C».
Реализован класс «Водитель категории D».
Приложение выводит в консоль сообщение: "водить А управляет автомобилем Б и будет участвовать в заезде".